[
   {
      "tagged_CVEs": {
         "CVE-2018-0171": "unlikely_to_be_exploited",
         "CVE-2018-0150": "unlikely_to_be_exploited",
         "CVE-2018-0151": "unlikely_to_be_exploited"
      },
      "text": "Cisco patches a severe flaw in switch deployment software that can be attacked with crafted messages sent to a port that's open by default. Cisco has released patches for 34 vulnerabilities mostly affecting its IOS and IOS XE networking software, including three critical remote code execution security bugs. Perhaps the most serious issue Cisco has released a patch for is critical bug CVE-2018-0171 affecting Smart Install, a Cisco client for quickly deploying new switches for Cisco IOS Software and Cisco IOS XE Software. A remote unauthenticated attacker can exploit a flaw in the client to reload an affected device and cause a denial of service or execute arbitrary code. Embedi, the security firm that found the flaw, initially believed it could only be exploited within an enterprise's network. However, it found millions of affected devices exposed on the internet. \\\"Because in a securely configured network, Smart Install technology participants should not be accessible through the internet. But scanning the internet has shown that this is not true,\\\" wrote Embedi. \\\"During a short scan of the internet, we detected 250,000 vulnerable devices and 8.5 million devices that have a vulnerable port open.\\\" Smart Install is supported by a broad range of Cisco routers and switches. The high number of devices with an open port is probably because the Smart Install client's port TCP 4786 is open by default. This situation is overlooked by network admins, Embedi said. The company has also published proof-of-concept exploit code, so it probably will be urgent for admins to patch. An attacker can exploit the bug by sending a crafted Smart Install message to these devices on TCP port 4786, according to Cisco. Embedi discovered the flaw last year, landing it an award at the GeekPwn conference in Hong Kong last May, and reported it to Cisco in September. Cisco's internal testing also turned up a critical issue in its IOS XE software, CVE-2018-0150, due to an undocumented user account that has a default username and password. Cisco warns that an attacker could use this account to remotely connect to a device running the software. Cisco engineers also found CVE-2018-0151, a remote code execution bug in the QoS subsystem of IOS and IOS XE. \\\"The vulnerability is due to incorrect bounds checking of certain values in packets that are destined for UDP port 18999 of an affected device. An attacker could exploit this vulnerability by sending malicious packets to an affected device,\\\" writes Cisco. All three bugs were given a CVSS score of 9.8 out of 10.\n"
   },
   {
      "tagged_CVEs": {
         "CVE-2018-0296": "unlikely_to_be_exploited"
      },
      "text": "After observing attacks on customers, Cisco is telling users to install the fix for a recently disclosed denial-of-service flaw affecting a number of its security appliances. The flaw, tracked as CVE-2018-0296, was detailed in an advisory on June 6 and affects Cisco ASA Software and Cisco Firepower Threat Defense (FTD) Software. \\\"Cisco strongly recommends that customers upgrade to a fixed software release to remediate this issue,\\\" Omar Santos of Cisco's Product Security Incident Response Team warned on June 22. The attacks follow the publication of proof-of-concept exploits for the flaw. Santos notes that a unauthenticated, remote attacker could cause a device to reload unexpectedly and cause a denial-of-service (DoS) condition.   Additionally, an exploit could cause a DoS or unauthenticated disclosure of information. However, Santos said: \\\"Only a denial-of-service condition (device reload) has been observed by Cisco.\\\" Cisco has also updated the advisory for CVE-2018-0296 with details about the attacks. The researcher who found the flaw, Michał Bentkowski from Polish security firm Securitum, gave a brief description of the root cause in a tweet shortly after Cisco disclosed the bug. Bentkowsky reported the issue to Cisco as a way to use directory-traversal techniques to disclose information to an unauthenticated attacker. Cisco labeled its primary impact as a DoS condition, but said it is possible that on certain releases of ASA a device reload would not occur, yet still allow an attacker to use directory-traversal techniques to view sensitive system information. Bleeping Computer identified two proof-of-concept exploits for CVE-2018-0296 on GitHub. One attempts to extract user names from Cisco ASA. The other states: \\\"If the web server is vulnerable, the script will dump in a text file both the content of the current directory, files in +CSCOE+ and active sessions.\\\"\n"
   },
   {
      "tagged_CVEs": {
         "CVE-2018-11776": "could_be_exploited"
      },
      "text": "Another critical security hole has been found in Apache Struts 2, requiring an immediate update. The vulnerability – CVE-2018-11776 – affects core code and allows miscreants to pull off remote code execution against vulnerable servers and websites. It affects all versions of Struts 2, the popular open-source framework for Java web apps. The Apache Software Foundation has \\\"urgently advised\\\" anyone using Struts to update to the latest version immediately, noting that the last time a critical hole was found, the holes were being exploited in the wild just a day later. In other words, if you delay in patching, your organization will be compromised in short order via this bug, if you are running vulnerable systems. It was that earlier flaw that led to a nightmare data breach from credit company Equifax after it failed to patch swiftly enough. The details of nearly 150 million people were exposed, costing the company more than $600m, so this is not something to be taken lightly. The company that discovered the vulnerability – Semmle Security Research Team – warns that this latest one is actually worse that the one last year, which it also found. It has published a blog post with more information. Semmle found the hole back in April and reported it to Apache, which put out a patch in June that it has now pulled into formal updates (2.3.35 for those using version 2.3 and 2.5.17 for those on 2.5). As mentioned, the vulnerability is in the core code and doesn't require additional plugins to work. It is caused by insufficient validation of untrusted user data in the core of the Struts framework, and can be exploited in several different ways. Semmle says it has identified two different vectors but warns there may be others.  Since it can be used remotely and due to the fact that Struts is typically used to create applications that are on the public internet, hackers are going to be especially focused on exploiting it so they can gain access to corporate networks. And there are some big targets out there: Apache Struts is extremely common with most large corporations using it somewhere in their systems for web apps. Semmle's VP of engineering, Pavel Avgustinov, had this to say about the hole on Wednesday this week: \\\"Critical remote code execution vulnerabilities like the one that affected Equifax and the one we announced today are incredibly dangerous for several reasons: Struts is used for publicly-accessible customer-facing websites, vulnerable systems are easily identified, and the flaw is easy to exploit. A hacker can find their way in within minutes, and exfiltrate data or stage further attacks from the compromised system. It’s crucially important to update affected systems immediately; to wait is to take an irresponsible risk.\\\" This is very far from the first time that big security holes have been found in Struts, leading some to recommend that people simply stop using it.\n"
   },
   {
      "tagged_CVEs": {
         "CVE-2018-7427": "unlikely_to_be_exploited",
         "CVE-2018-7432": "unlikely_to_be_exploited",
         "CVE-2018-7429": "unlikely_to_be_exploited",
         "CVE-2018-7431": "unlikely_to_be_exploited"
      },
      "text": "Splunk recently addressed several vulnerabilities in Enterprise and Light products, some of them have been rated “high severity.” Splunk Enterprise solution allows organizations to aggregate, search, analyze, and visualize data from various sources that are critical to business operations. The Splunk Light is a comprehensive solution for small IT environments that automates log analysis and integrate server and network monitoring. “To mitigate these issues, Splunk recommends upgrading to the latest release and applying as many of the Hardening Standards from the Securing Splunk documentation as are relevant to your environment. Splunk Enterprise and Splunk Light releases are cumulative, meaning that future releases will contain fixes to these vulnerabilities, new features and other bug fixes,” reads the advisory published by Splunk. The most severe issue fixed by the company is a high severity cross-site scripting (XSS) flaw in the Web interface, tracked as CVE-2018-7427, that received the CVSS score of 8.1. Another severe vulnerability is a DoS flaw tracked as CVE-2018-7432 that could be exploited using malicious HTTP requests sent to Splunkd that is the system process that handles indexing, searching and forwarding. This issue was tracked as “medium severity” by the company. The company also addressed a denial-of-service (DoS) vulnerability, tracked as CVE-2018-7429, that could be exploited by an attacker by sending a specially crafted HTTP request to Splunkd. The last flaw addressed by the vendor, tracked as CVE-2018-7431, is a path traversal issue that allows an authenticated attacker to download arbitrary files from the vendor Django app. The vulnerability has been rated “medium severity.” The vendor declared it has found no evidence that these vulnerabilities have been exploited in attacks in the wild.\n"
   },
   {
      "tagged_CVEs": {
         "CVE-2017-12934": "unlikely_to_be_exploited",
         "CVE-2017-12933": "unlikely_to_be_exploited",
         "CVE-2017-": "unlikely_to_be_exploited"
      },
      "text": "A severe WordPress vulnerability which has been left a year without being patched has the potential to disrupt countless websites running the CMS, researchers claim. At the BSides technical cybersecurity conference in Manchester on Thursday, Secarma researcher Sam Thomas said the bug permits attackers to exploit the WordPress PHP framework, resulting in a full system compromise. If the domain permits the upload of files, such as image formats, attackers can upload a crafted thumbnail file in order to trigger a file operation through the \\\"phar://\\\" stream wrapper. In turn, the exploit triggers eXternal Entity (XXE -- XML) and Server Side Request Forgery (SSRF) flaws which cause unserialization in the platform's code. While these flaws may only originally result in information disclosure and may be low risk, they can act as a pathway to a more serious remote code execution attack. The security researcher says the core vulnerability, which is yet to receive a CVE number, is within the wp_get_attachment_thumb_file function in /wpincludes/post.php and when attackers gain control of a parameter used in the \\\"file_exists\\\" call,\\\" the bug can be triggered. Unserialization occurs when serialized variables are converted back into PHP values. When autoloading is in place, this can result in code being loaded and executed, an avenue attackers may exploit in order to compromise PHP-based frameworks. \\\"Unserialization of attacker-controlled data is a known critical vulnerability, potentially resulting in the execution of malicious code,\\\" the company says. The issue of unserialization was first uncovered back in 2009, and since then, vulnerabilities have been recognized in which the integrity of PHP systems can be compromised, such as CVE-2017-12934, CVE-2017-12933, and CVE-2017- 12932. The WordPress content management system (CMS) is used by millions of webmasters to manage domains, which means the vulnerability potentially has a vast victim pool should the flaw being exploited in the wild. \\\"I've highlighted that the unserialization is exposed to a lot of vulnerabilities that might have previously been considered quite low-risk,\\\" Thomas explainde. \\\"Issues which they might have thought were fixed with a configuration change or had been considered quite minor previously might need to be reevaluated in the light of the attacks I demonstrated.\\\" According to Secarma, the CMS provider was made aware of the security issue in February 2017, but \\\"is yet to take action.\\\" TechRepublic: The need for speed: Why you should optimize your CMS Technical details have been provided in a white paper (.PDF). \\\"This research continues a worrying recent trend, in demonstrating that object (un)serialization is an integral part of several modern languages,\\\" Thomas said. \\\"We must constantly be aware of the security impact of such mechanisms being exposed to attackers.\\\" No reports have been received which suggest the exploit is being actively used in the wild. The vulnerability was originally reported through the WordPress HackerOne bug bounty program last year. The issue was confirmed after several days and Thomas was credited for his findings. However, a Secarma spokesperson told ZDNet that while there was \\\"some attempt to fix the issue\\\" in May 2017, this did not address the problem. \\\"Communication then went dead for a number of months and has only recently begun again,\\\" the spokesperson added. ZDNet has reached out to WordPress and will update if we hear back.\n"
   },
   {
      "tagged_CVEs": {
         "CVE-2017-3135": "could_be_exploited"
      },
      "text": "The Internet Systems Consortium patched the BIND domain name system this week, addressing a remotely exploitable vulnerability it considers high severity and said could lead to a crash. The issue affects servers that use both the DNS64 and RPZ function simultaneously. DNS64 is a mechanism for synthesizing AAAA records from A records. It’s traditionally used to allow IPv6-only clients to receive IPv6 addresses proxied to IPv4 addresses. The RPZ mechanism is used by Domain Name System recursive resolvers to allow for the customized handling of the resolution of collections of domain name information. Versions 9.8.8, 9.9.3-S1, 9.9.3, 9.9.10b1, 9.10.0, and 9.10.5b1, 9.11.0 are all considered vulnerable, according to the ISC. When servers use both mechanisms simultaneously, a vulnerability (CVE-2017-3135) that stems from query processing could result in an inconsistent state, triggering either an INSIST assertion failure or an attempt to read through a NULL pointer, according to a security advisory published Wednesday. The INSIST assertion failure could lead to a subsequent abort, ISC said, while the NULL pointer in some instances can lead to a segmentation fault, which causes the process to be terminated. Ramesh Damodaran and Aliaksandr Shubnik, engineers at Infoblox, a Silicon Valley firm that does DNS, DHCP and IP management, uncovered the vulnerability and reported it to the ISC. Damodaran previously helped identified an unspecified packet processing remote denial of service vulnerability in BIND 9. The Internet Systems Consortium patched the BIND domain name system this week, addressing what it calls a critical error condition in the software. Researchers find industrial control system malware similar to BlackEnergy, Havex, and Stuxnet going undetected on Google VirusTotal for years. The Internet Systems Consortium (ISC) announced it is planning to patch versions of its DHCP to mitigate a denial of service vulnerability.\n"
   },
   {
      "tagged_CVEs": {
         "CVE-2018-16858": "unlikely_to_be_exploited"
      },
      "text": "A security flaw affecting LibreOffice and Apache OpenOffice has been fixed in one of the two open-source office suites. The other still appears to be vulnerable. Before attempting to guess which app has yet to be patched, consider that Apache OpenOffice for years has struggled attract more contributors. And though the number of people adding code to the project has grown since last we checked, the project missed its recent January report to the Apache Foundation. The upshot is: security holes aren't being patched, it seems. The issue, identified by security researcher Alex Inführ, is that there's a way to achieve remote code execution by triggering an event embedded in an ODT (OpenDocument Text) file. In a blog post on Friday, Inführ explains how he found a way to abuse the OpenDocument scripting framework by adding an onmouseover event to a link in an ODT file. The event, which fires when a user's mouse pointer moves over the link, can traverse local directories and execute a local Python script. After trying various approaches to exploit the vulnerability, Inführ found that he could rig the event to call a specific function within a Python file included with the Python interpreter that ships with LibreOffice. \\\"For the solution I looked into the Python parsing code a little more in depth and discovered that it is not only possible to specify the function you want to call inside a python script, but it is possible to pass parameters as well,\\\" he said. The exploit was tested on Windows, and should work on Linux, too. Inführ says he reported the bug on October 18 and it was fixed in LibreOffice by the end of the month. RedHat assigned it CVE-2018-16858 in mid-November and gave Inführ a disclosure date of January 31, 2019. When he published on February 1, in conjunction with the LibreOffice fix notification, OpenOffice still had not been patched. Inführ says he reconfirmed that he could go ahead with disclosure even though OpenOffice 4.16 has yet to be fixed. His proof-of-concept exploit doesn't work with OpenOffice out-of-the-box because the software doesn't allow parameters to be passed in the same way as the unpatched version of LibreOffice did. However, he says that the path traversal issue can still be abused to execute a local Python file and cause further mischief and damage. We're imagining specifically targeted netizens being tricked into opening a ZIP file, unpacking an ODT and Python script, and then the ODT document attempting to execute the Python script when the victim rolls their mouse over a link, for instance. The Register tried to reach two OpenOffice contributors to find out what's going on. We've not heard back. According to Inführ, OpenOffice users can mitigate the risk by removing or renaming the pythonscript.py file in the installation folder.\n"
   },
   {
      "tagged_CVEs": {
         "CVE-2018-15982": "unlikely_to_be_exploited"
      },
      "text": "Adobe has patched 87 vulnerabilities for Acrobat and Reader in its December Patch Tuesday update, including a slew of critical flaws that would allow arbitrary code-execution. The scheduled update comes less than a week after Adobe released several out-of-band fixes for Flash Player, including a critical vulnerability (CVE-2018-15982) that it said is being exploited in the wild. That’s a use-after-free flaw enabling arbitrary code-execution in Flash.  The addressed critical vulnerabilities are myriad this month. The arbitrary code-execution problems include: two buffer errors; two untrusted pointer dereference glitches; three heap-overflow issues, five out-of-bounds write flaws, 24 use-after-free bugs. Adobe also patched three other critical-rated issues that could lead to privilege escalation; these are all security bypass problems.  In addition to the critical bugs, Adobe also patched 43 out-of-bounds read flaws, four integer overflow problems and two security bypass issues, all of which could allow information disclosure. Adobe has characterized all of the flaws, both critical and important, as “priority two” for patching, which means that the software giant deems them to be unlikely to be imminently exploited in the wild, but patching within 30 days is recommended. The flaws are far-reaching and affect various implementations of Acrobat DC, Acrobat Reader DC, Acrobat 2017 and Acrobat Reader 2017 for macOS and Windows, in classic 2015, classic 2017 and continuous-track versions. All can be mitigated by updating to the most current versions of the software.\n"
   },
   {
      "tagged_CVEs": {
         "CVE-2018-15981": "unlikely_to_be_exploited"
      },
      "text": "Adobe has emitted software updates to address a critical vulnerability in Flash Player for Windows, Mac, and Linux. PC owners and admins will want to upgrade their copies of Flash to version 31.0.0.153 or later in order to get the patch – or just dump the damn thing all together. The November 20 security update addresses a single flaw, designated CVE-2018-15981. It is a type confusion bug that can be exploited to achieve remote code execution. Basically, an attacker could slip the exploit code into a Flash .swf file, put it on a web page, and covertly install malware on any vulnerable machine that visits the page. Because Adobe does not maintain a fixed patching schedule for Flash Player, this isn't technically considered an out-of-band band-aid. However, the update does come just one week after Adobe pushed out a handful of fixes for Patch Tuesday, including one for an information disclosure vulnerability in Flash Player. That Adobe would post another update just one week after their last patch should underscore that CVE-2018-15981 is a serious enough vulnerability to be a priority fix for users and admins. After installing this latest fix, those who are tired of the constant security threats might also want to consider taking the advice of multiple security experts and developers and at least disable Flash by default if not permanently. The notoriously vulnerable plugin has long since been surpassed by HTML5, and most major websites have already transitioned away from Flash, leaving it only really useful for specific sites and applications. Even Adobe wants to kill off Flash. The Photoshop giant has said that by 2020 it plans to formally retire the plugin once and for all.\n"
   },
   {
      "tagged_CVEs": {
         "CVE-2018-12376": "unlikely_to_be_exploited",
         "CVE-2018-12377": "unlikely_to_be_exploited",
         "CVE-2018-12378": "unlikely_to_be_exploited",
         "CVE-2018-12375": "unlikely_to_be_exploited"
      },
      "text": "Mozilla released nine fixes in its Wednesday launch of Firefox 62 for Windows, Mac and Android – including one for a critical glitch that could enable attackers to run arbitrary code. Overall, the latest version of the Firefox browser included fixes for the critical issue, three high-severity flaws, two moderate problems and three low-severity vulnerabilities. Topping the list is a memory safety bug (CVE-2018-12376), discovered by a number of Mozilla developers and community members. A critical impact bug means the vulnerability can be used to run attacker code and install software, requiring no user interaction beyond normal browsing, according to Mozilla. The memory safety problem, which exists in Firefox 61 and Firefox ESR 60, meets these criteria, researchers said. Mozilla didn’t release further details, but it did assign one CVE to represent multiple similar issues. In addition to the memory safety bug(s), Mozilla also fixed three high-severity vulnerabilities in its latest update. These include a use-after-free glitch in refresh driver timers (CVE-2018-12377), which power browser-page refreshes. Another high-severity bug (CVE-2018-12378) is a use-after-free vulnerability that occurs when an IndexedDB index (a low-level API for client-side storage of significant amounts of structured data) is deleted while still in use by JavaScript code providing payload values. “This results in a potentially exploitable crash,” the advisory said. Mozilla developers and community members also found a memory-safety bug (CVE-2018-12375) in Firefox 61, which showed evidence of memory corruption and could be exploited to run arbitrary code, according to the advisory. The moderate and low-severity fixes that were deployed in Firefox 62 include patches for an out-of-bounds write flaw (triggered when the Mozilla Updater opens a MAR format file that contains a very long item filename); and a proxy bypass glitch in the browser’s proxy settings. Firefox 62 for desktop is available for download on Mozilla’s website.\n"
   },
   {
      "tagged_CVEs": {
         "CVE-2018-8423": "unlikely_to_be_exploited"
      },
      "text": "Microsoft issued numerous bug fixes on its most recent Patch Tuesday, but according to the security firm 0patch, there were issues with one of the flaws for a critical vulnerability. The vulnerability in question, (CVE-2018-8423), is a memory corruption vulnerability that exists in the Jet Database Engine that, when exploited, allows for remote code execution. 0patch noticed that the patch Microsoft had issued was flawed as a result of studying the official patch of the Jet Database Engine and a “micropatch” that the security researchers had created for the same flaw. They explain this revelation as follows: As expected, the update brought a modified msrd3x40.dll binary: this is the binary with the vulnerability, which we had micropatched with 4 CPU instructions (one of which was just for reporting purposes). The version of msrd3x40.dll changed from 4.0.9801.0 to 4.0.9801.5 and of course, its cryptographic hash also changed - which resulted in our micropatch for this issue no longer getting applied to msrd3x40.dll. So far so good, but the problems became glaring once further analysis began:     We BinDiff-ed the patched msrd3x40.dll to its vulnerable version and reviewed the differences. At this point we will only state that we found the official fix to be slightly different to our micropatch, and unfortunately in a way that only limited the vulnerability instead of eliminating it. We promptly notified Microsoft about it and will not reveal further details or proof-of-concept until they issue a correct fix. It may be a little frustrating to not know what the problem is from a tech journalist’s perspective, but as I am also an “ethical” hacker, I totally understand the lack of disclosure on the part of both Microsoft and 0patch. If the flaw is not public knowledge and has not been patched, it makes no sense to hand a cybercriminal the keys to Windows user’s machines. What this story shows is how vital the relationship between third-party security researchers and vendors. Without the due diligence of first Trend Micro’s ZDI discovering the original flaw, and then 0patch uncovering the secondary flaw in the patch, Microsoft and their customers would be exposed to hackers with bad intentions.\n"
   }
]